---
- name: update apt-cache
  apt:
    update_cache: true
    cache_valid_time: 3600
  tags:
    - install

- name: install dependencies
  apt:
    name:
      - curl
      - unzip
    state: present
    cache_valid_time: 3600
  tags:
    - install

- name: install consul
  unarchive:
    src: "{{ consul_src }}"
    dest: "{{ consul_dest }}"
    mode: 0755
    remote_src: true
  tags:
    - install

- name: ensure consul run directory
  file:
    path: "{{ consul_dir }}"
    state: directory
    mode: 0755
    owner: root
    group: root
  tags:
    - install

- name: ensure consul run data directory
  file:
    path: "{{ consul_data_dir }}"
    state: directory
    mode: 0755
    owner: root
    group: root
  tags:
    - install

- name: ensure consul config directory
  file:
    path: "{{ consul_conf_dir }}"
    state: directory
    mode: 0755
    owner: root
    group: root
  tags:
    - install

- name: assert consul mode
  assert:
    that:
      - 'consul_mode in ("client", "server")'

- name: Gather facts
  ec2_facts:
  tags:
    - configuration

- name: set datacenter to current region
  set_fact:
    consul_datacenter: "{{ ansible_ec2_placement_region }}"
  when: ansible_ec2_placement_region is defined
  tags:
    - configuration

- name: set datacenter to default value
  set_fact:
    consul_datacenter: "{{ consul_conf_datacenter }}"
  when: ansible_ec2_placement_region is undefined
  tags:
    - configuration

- name: put consul configuration
  template:
    src: "{{ consul_mode }}.json.j2"
    dest: /etc/consul.d/config.json
    owner: root
    group: root
    mode: 0644
  notify: restart consul
  tags:
    - configuration

- name: put systemd configuration
  template:
    src: "{{ consul_mode }}.service.j2"
    dest: /etc/systemd/system/consul.service
    owner: root
    group: root
    mode: 0644
  when: ansible_distribution_release == 'xenial'

- name: put upstart configuration
  template:
    src: "{{ consul_mode }}.upstart.conf.j2"
    dest: /etc/init/consul.conf
    owner: root
    group: root
    mode: 0644
  when: ansible_distribution_release == 'trusty'

- include: dnsmasq.yml
  when: consul_dnsmasq
  tags:
    - dnsmasq

- name: enable consul
  service:
    name: consul
    enabled: "{{ consul_service_enabled }}"
  when: lookup('env', 'MOLECULE_DRIVER_NAME') != 'docker'
  tags:
    - service

- name: start/stop consul service
  service:
    name: consul
    state: '{{ "started" if consul_service_started else "stopped" }}'
  when: lookup('env', 'MOLECULE_DRIVER_NAME') != 'docker'
  tags:
    - service

- name: enable dnsmasq
  service:
    name: dnsmasq
    enabled: "{{ consul_dnsmasq_service_enabled }}"
  when: consul_dnsmasq and lookup('env', 'MOLECULE_DRIVER_NAME') != 'docker'
  tags:
    - service

- name: start/stop dnsmasq service
  service:
    name: dnsmasq
    state: '{{ "started" if consul_dnsmasq_service_started else "stopped" }}'
  when: consul_dnsmasq and lookup('env', 'MOLECULE_DRIVER_NAME') != 'docker'
  tags:
    - service
